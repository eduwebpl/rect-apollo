type Elastic50 {
  # Perform a [bulk](https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-bulk.html) request
  bulk(
    # Sets the number of shard copies that must be active before proceeding with
    # the bulk operation. Defaults to 1, meaning the primary shard only. Set to
    # `all` for all shard copies, otherwise set to any non-negative value less
    # than or equal to the total number of copies for the shard (number of replicas + 1)
    waitForActiveShards: String

    # If `true` then refresh the effected shards to make this operation visible to
    # search, if `wait_for` then wait for a refresh to make this operation visible
    # to search, if `false` (the default) then do nothing with refreshes.
    refresh: Elastic50Enum_Refresh

    # Specific routing value
    routing: String

    # Explicit operation timeout
    timeout: String

    # Default document type for items which don't provide one
    type: String

    # Default comma-separated list of fields to return in the response for updates, can be overridden on each sub-request
    fields: JSON

    # True or false to return the _source field or not, or default list of fields
    # to return, can be overridden on each sub-request
    _source: JSON

    # Default list of fields to exclude from the returned _source field, can be overridden on each sub-request
    _sourceExclude: JSON

    # Default list of fields to extract and return from the _source field, can be overridden on each sub-request
    _sourceInclude: JSON

    # The pipeline id to preprocess incoming documents with
    pipeline: String

    # Default index for items which don't provide one
    index: String
  ): JSON
  cat: Elastic50Methods_Cat

  # Perform a [clearScroll](https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-request-scroll.html) request
  clearScroll(
    # A comma-separated list of scroll IDs to clear
    scrollId: JSON
  ): JSON
  cluster: Elastic50Methods_Cluster

  # Perform a [count](https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-count.html) request
  count(
    # Whether specified concrete indices should be ignored when unavailable (missing or closed)
    ignoreUnavailable: Boolean

    # Whether to ignore if a wildcard indices expression resolves into no concrete
    # indices. (This includes `_all` string or when no indices have been specified)
    allowNoIndices: Boolean
    expandWildcards: Elastic50Enum_ExpandWildcards = open

    # Include only documents with a specific `_score` value in the result
    minScore: Float

    # Specify the node or shard the operation should be performed on (default: random)
    preference: String

    # Specific routing value
    routing: String

    # Query in the Lucene query string syntax
    q: String

    # The analyzer to use for the query string
    analyzer: String

    # Specify whether wildcard and prefix queries should be analyzed (default: false)
    analyzeWildcard: Boolean
    defaultOperator: Elastic50Enum_DefaultOperator = OR

    # The field to use as default where no field prefix is given in the query string
    df: String

    # Specify whether format-based query failures (such as providing text to a numeric field) should be ignored
    lenient: Boolean

    # Specify whether query terms should be lowercased
    lowercaseExpandedTerms: Boolean

    # A comma-separated list of indices to restrict the results
    index: JSON

    # A comma-separated list of types to restrict the results
    type: JSON
  ): JSON

  # Perform a [countPercolate](https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-percolate.html) request
  countPercolate(
    # A comma-separated list of specific routing values
    routing: JSON

    # Specify the node or shard the operation should be performed on (default: random)
    preference: String

    # Whether specified concrete indices should be ignored when unavailable (missing or closed)
    ignoreUnavailable: Boolean

    # Whether to ignore if a wildcard indices expression resolves into no concrete
    # indices. (This includes `_all` string or when no indices have been specified)
    allowNoIndices: Boolean
    expandWildcards: Elastic50Enum_ExpandWildcards = open

    # The index to count percolate the document into. Defaults to index.
    percolateIndex: String

    # The type to count percolate document into. Defaults to type.
    percolateType: String

    # Explicit version number for concurrency control
    version: Float

    # Specific version type
    versionType: Elastic50Enum_VersionType

    # The index of the document being count percolated.
    index: String

    # The type of the document being count percolated.
    type: String

    # Substitute the document in the request body with a document that is known by
    # the specified id. On top of the id, the index and type parameter will be
    # used to retrieve the document from within the cluster.
    id: String
  ): JSON

  # Perform a [create](https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-index_.html) request
  create(
    # Sets the number of shard copies that must be active before proceeding with
    # the index operation. Defaults to 1, meaning the primary shard only. Set to
    # `all` for all shard copies, otherwise set to any non-negative value less
    # than or equal to the total number of copies for the shard (number of replicas + 1)
    waitForActiveShards: String

    # ID of the parent document
    parent: String

    # If `true` then refresh the affected shards to make this operation visible to
    # search, if `wait_for` then wait for a refresh to make this operation visible
    # to search, if `false` (the default) then do nothing with refreshes.
    refresh: Elastic50Enum_Refresh

    # Specific routing value
    routing: String

    # Explicit operation timeout
    timeout: String

    # Explicit timestamp for the document
    timestamp: String

    # Expiration time for the document
    ttl: String

    # Explicit version number for concurrency control
    version: Float

    # Specific version type
    versionType: Elastic50Enum_VersionType

    # The pipeline id to preprocess incoming documents with
    pipeline: String

    # The name of the index
    index: String

    # The type of the document
    type: String

    # Document ID
    id: String
  ): JSON

  # Perform a [deleteByQuery](https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-delete-by-query.html) request
  deleteByQuery(
    # The analyzer to use for the query string
    analyzer: String

    # Specify whether wildcard and prefix queries should be analyzed (default: false)
    analyzeWildcard: Boolean
    defaultOperator: Elastic50Enum_DefaultOperator = OR

    # The field to use as default where no field prefix is given in the query string
    df: String

    # Starting offset (default: 0)
    from: Float

    # Whether specified concrete indices should be ignored when unavailable (missing or closed)
    ignoreUnavailable: Boolean

    # Whether to ignore if a wildcard indices expression resolves into no concrete
    # indices. (This includes `_all` string or when no indices have been specified)
    allowNoIndices: Boolean
    conflicts: Elastic50Enum_Conflicts = abort
    expandWildcards: Elastic50Enum_ExpandWildcards = open

    # Specify whether format-based query failures (such as providing text to a numeric field) should be ignored
    lenient: Boolean

    # Specify whether query terms should be lowercased
    lowercaseExpandedTerms: Boolean

    # Specify the node or shard the operation should be performed on (default: random)
    preference: String

    # Query in the Lucene query string syntax
    q: String

    # A comma-separated list of specific routing values
    routing: JSON

    # Specify how long a consistent view of the index should be maintained for scrolled search
    scroll: String

    # Search operation type
    searchType: Elastic50Enum_SearchType

    # Explicit timeout for each search request. Defaults to no timeout.
    searchTimeout: String

    # Number of hits to return (default: 10)
    size: Float

    # A comma-separated list of <field>:<direction> pairs
    sort: JSON

    # True or false to return the _source field or not, or a list of fields to return
    _source: JSON

    # A list of fields to exclude from the returned _source field
    _sourceExclude: JSON

    # A list of fields to extract and return from the _source field
    _sourceInclude: JSON

    # The maximum number of documents to collect for each shard, upon reaching which the query execution will terminate early.
    terminateAfter: Float

    # Specific 'tag' of the request for logging and statistical purposes
    stats: JSON

    # Specify whether to return document version as part of a hit
    version: Boolean

    # Specify if request cache should be used for this request or not, defaults to index level setting
    requestCache: Boolean

    # Should the effected indexes be refreshed?
    refresh: Boolean
    timeout: String = "1m"

    # Sets the number of shard copies that must be active before proceeding with
    # the delete by query operation. Defaults to 1, meaning the primary shard
    # only. Set to `all` for all shard copies, otherwise set to any non-negative
    # value less than or equal to the total number of copies for the shard (number
    # of replicas + 1)
    waitForActiveShards: String

    # Size on the scroll request powering the update_by_query
    scrollSize: Float

    # Should the request should block until the delete-by-query is complete.
    waitForCompletion: Boolean

    # The throttle to set on this request in sub-requests per second. -1 means set
    # no throttle as does "unlimited" which is the only non-float this accepts.
    requestsPerSecond: Float

    # A comma-separated list of index names to search; use `_all` or empty string to perform the operation on all indices
    index: JSON

    # A comma-separated list of document types to search; leave empty to perform the operation on all types
    type: JSON
  ): JSON

  # Perform a [deleteScript](https://www.elastic.co/guide/en/elasticsearch/reference/5.x/modules-scripting.html) request
  deleteScript(
    # Script language
    lang: String

    # Script ID
    id: String
  ): JSON

  # Perform a [deleteTemplate](https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-template.html) request
  deleteTemplate(
    # Template ID
    id: String
  ): JSON

  # Perform a [exists](https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-get.html) request
  exists(
    # The ID of the parent document
    parent: String

    # Specify the node or shard the operation should be performed on (default: random)
    preference: String

    # Specify whether to perform the operation in realtime or search mode
    realtime: Boolean

    # Refresh the shard containing the document before performing the operation
    refresh: Boolean

    # Specific routing value
    routing: String

    # The name of the index
    index: String

    # The type of the document (use `_all` to fetch the first document matching the ID across all types)
    type: String

    # The document ID
    id: String
  ): JSON

  # Perform a [explain](https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-explain.html) request
  explain(
    # Specify whether wildcards and prefix queries in the query string query should be analyzed (default: false)
    analyzeWildcard: Boolean

    # The analyzer for the query string query
    analyzer: String
    defaultOperator: Elastic50Enum_DefaultOperator = OR

    # The default field for query string query (default: _all)
    df: String

    # A comma-separated list of stored fields to return in the response
    storedFields: JSON

    # Specify whether format-based query failures (such as providing text to a numeric field) should be ignored
    lenient: Boolean

    # Specify whether query terms should be lowercased
    lowercaseExpandedTerms: Boolean

    # The ID of the parent document
    parent: String

    # Specify the node or shard the operation should be performed on (default: random)
    preference: String

    # Query in the Lucene query string syntax
    q: String

    # Specific routing value
    routing: String

    # True or false to return the _source field or not, or a list of fields to return
    _source: JSON

    # A list of fields to exclude from the returned _source field
    _sourceExclude: JSON

    # A list of fields to extract and return from the _source field
    _sourceInclude: JSON

    # The name of the index
    index: String

    # The type of the document
    type: String

    # The document ID
    id: String
  ): JSON

  # Perform a [fieldStats](https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-field-stats.html) request
  fieldStats(
    # A comma-separated list of fields for to get field statistics for (min value, max value, and more)
    fields: JSON
    level: Elastic50Enum_Level_1 = cluster

    # Whether specified concrete indices should be ignored when unavailable (missing or closed)
    ignoreUnavailable: Boolean

    # Whether to ignore if a wildcard indices expression resolves into no concrete
    # indices. (This includes `_all` string or when no indices have been specified)
    allowNoIndices: Boolean
    expandWildcards: Elastic50Enum_ExpandWildcards = open

    # A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices
    index: JSON
  ): JSON

  # Perform a [get](https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-get.html) request
  get(
    # A comma-separated list of stored fields to return in the response
    storedFields: JSON

    # The ID of the parent document
    parent: String

    # Specify the node or shard the operation should be performed on (default: random)
    preference: String

    # Specify whether to perform the operation in realtime or search mode
    realtime: Boolean

    # Refresh the shard containing the document before performing the operation
    refresh: Boolean

    # Specific routing value
    routing: String

    # True or false to return the _source field or not, or a list of fields to return
    _source: JSON

    # A list of fields to exclude from the returned _source field
    _sourceExclude: JSON

    # A list of fields to extract and return from the _source field
    _sourceInclude: JSON

    # Explicit version number for concurrency control
    version: Float

    # Specific version type
    versionType: Elastic50Enum_VersionType

    # The name of the index
    index: String

    # The type of the document (use `_all` to fetch the first document matching the ID across all types)
    type: String

    # The document ID
    id: String
  ): JSON

  # Perform a [getScript](https://www.elastic.co/guide/en/elasticsearch/reference/5.x/modules-scripting.html) request
  getScript(
    # Script language
    lang: String

    # Script ID
    id: String
  ): JSON

  # Perform a [getSource](https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-get.html) request
  getSource(
    # The ID of the parent document
    parent: String

    # Specify the node or shard the operation should be performed on (default: random)
    preference: String

    # Specify whether to perform the operation in realtime or search mode
    realtime: Boolean

    # Refresh the shard containing the document before performing the operation
    refresh: Boolean

    # Specific routing value
    routing: String

    # True or false to return the _source field or not, or a list of fields to return
    _source: JSON

    # A list of fields to exclude from the returned _source field
    _sourceExclude: JSON

    # A list of fields to extract and return from the _source field
    _sourceInclude: JSON

    # Explicit version number for concurrency control
    version: Float

    # Specific version type
    versionType: Elastic50Enum_VersionType

    # The name of the index
    index: String

    # The type of the document; use `_all` to fetch the first document matching the ID across all types
    type: String

    # The document ID
    id: String
  ): JSON

  # Perform a [getTemplate](https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-template.html) request
  getTemplate(
    # Template ID
    id: String
  ): JSON

  # Perform a [index](https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-index_.html) request
  index(
    # Sets the number of shard copies that must be active before proceeding with
    # the index operation. Defaults to 1, meaning the primary shard only. Set to
    # `all` for all shard copies, otherwise set to any non-negative value less
    # than or equal to the total number of copies for the shard (number of replicas + 1)
    waitForActiveShards: String
    opType: Elastic50Enum_OpType = index

    # ID of the parent document
    parent: String

    # If `true` then refresh the affected shards to make this operation visible to
    # search, if `wait_for` then wait for a refresh to make this operation visible
    # to search, if `false` (the default) then do nothing with refreshes.
    refresh: Elastic50Enum_Refresh

    # Specific routing value
    routing: String

    # Explicit operation timeout
    timeout: String

    # Explicit timestamp for the document
    timestamp: String

    # Expiration time for the document
    ttl: String

    # Explicit version number for concurrency control
    version: Float

    # Specific version type
    versionType: Elastic50Enum_VersionType

    # The pipeline id to preprocess incoming documents with
    pipeline: String

    # The name of the index
    index: String

    # The type of the document
    type: String

    # Document ID
    id: String
  ): JSON
  indices: Elastic50Methods_Indices

  # Perform a [info](https://www.elastic.co/guide/) request
  info: JSON
  ingest: Elastic50Methods_Ingest

  # Perform a [mget](https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-multi-get.html) request
  mget(
    # A comma-separated list of stored fields to return in the response
    storedFields: JSON

    # Specify the node or shard the operation should be performed on (default: random)
    preference: String

    # Specify whether to perform the operation in realtime or search mode
    realtime: Boolean

    # Refresh the shard containing the document before performing the operation
    refresh: Boolean

    # Specific routing value
    routing: String

    # True or false to return the _source field or not, or a list of fields to return
    _source: JSON

    # A list of fields to exclude from the returned _source field
    _sourceExclude: JSON

    # A list of fields to extract and return from the _source field
    _sourceInclude: JSON

    # The name of the index
    index: String

    # The type of the document
    type: String
  ): JSON

  # Perform a [mpercolate](https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-percolate.html) request
  mpercolate(
    # Whether specified concrete indices should be ignored when unavailable (missing or closed)
    ignoreUnavailable: Boolean

    # Whether to ignore if a wildcard indices expression resolves into no concrete
    # indices. (This includes `_all` string or when no indices have been specified)
    allowNoIndices: Boolean
    expandWildcards: Elastic50Enum_ExpandWildcards = open

    # The index of the document being count percolated to use as default
    index: String

    # The type of the document being percolated to use as default.
    type: String
  ): JSON

  # Perform a [msearch](https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-multi-search.html) request
  msearch(
    # Search operation type
    searchType: Elastic50Enum_SearchType_1

    # Controls the maximum number of concurrent searches the multi search api will execute
    maxConcurrentSearches: Float

    # A comma-separated list of index names to use as default
    index: JSON

    # A comma-separated list of document types to use as default
    type: JSON
  ): JSON

  # Perform a [msearchTemplate](https://www.elastic.co/guide/en/elasticsearch/reference/current/search-template.html) request
  msearchTemplate(
    # Search operation type
    searchType: Elastic50Enum_SearchType_1

    # A comma-separated list of index names to use as default
    index: JSON

    # A comma-separated list of document types to use as default
    type: JSON
  ): JSON

  # Perform a [mtermvectors](https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-multi-termvectors.html) request
  mtermvectors(
    # A comma-separated list of documents ids. You must define ids as parameter or set "ids" or "docs" in the request body
    ids: JSON

    # Specifies if total term frequency and document frequency should be returned.
    # Applies to all returned documents unless otherwise specified in body
    # "params" or "docs".
    termStatistics: Boolean
    fieldStatistics: Boolean = true

    # A comma-separated list of fields to return. Applies to all returned
    # documents unless otherwise specified in body "params" or "docs".
    fields: JSON
    offsets: Boolean = true
    positions: Boolean = true
    payloads: Boolean = true

    # Specify the node or shard the operation should be performed on (default:
    # random) .Applies to all returned documents unless otherwise specified in
    # body "params" or "docs".
    preference: String

    # Specific routing value. Applies to all returned documents unless otherwise specified in body "params" or "docs".
    routing: String

    # Parent id of documents. Applies to all returned documents unless otherwise specified in body "params" or "docs".
    parent: String

    # Specifies if requests are real-time as opposed to near-real-time (default: true).
    realtime: Boolean

    # Explicit version number for concurrency control
    version: Float

    # Specific version type
    versionType: Elastic50Enum_VersionType

    # The index in which the document resides.
    index: String

    # The type of the document.
    type: String
  ): JSON
  nodes: Elastic50Methods_Nodes

  # Perform a [percolate](https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-percolate.html) request
  percolate(
    # A comma-separated list of specific routing values
    routing: JSON

    # Specify the node or shard the operation should be performed on (default: random)
    preference: String

    # Whether specified concrete indices should be ignored when unavailable (missing or closed)
    ignoreUnavailable: Boolean

    # Whether to ignore if a wildcard indices expression resolves into no concrete
    # indices. (This includes `_all` string or when no indices have been specified)
    allowNoIndices: Boolean
    expandWildcards: Elastic50Enum_ExpandWildcards = open

    # The index to percolate the document into. Defaults to index.
    percolateIndex: String

    # The type to percolate document into. Defaults to type.
    percolateType: String

    # The routing value to use when percolating the existing document.
    percolateRouting: String

    # Which shard to prefer when executing the percolate request.
    percolatePreference: String

    # Return an array of matching query IDs instead of objects
    percolateFormat: Elastic50Enum_PercolateFormat

    # Explicit version number for concurrency control
    version: Float

    # Specific version type
    versionType: Elastic50Enum_VersionType

    # The index of the document being percolated.
    index: String

    # The type of the document being percolated.
    type: String

    # Substitute the document in the request body with a document that is known by
    # the specified id. On top of the id, the index and type parameter will be
    # used to retrieve the document from within the cluster.
    id: String
  ): JSON

  # Perform a [ping](https://www.elastic.co/guide/) request
  ping: JSON

  # Perform a [putScript](https://www.elastic.co/guide/en/elasticsearch/reference/5.x/modules-scripting.html) request
  putScript(
    # Script language
    lang: String

    # Script ID
    id: String
  ): JSON

  # Perform a [putTemplate](https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-template.html) request
  putTemplate(
    # Template ID
    id: String
  ): JSON

  # Perform a [reindex](https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-reindex.html) request
  reindex(
    # Should the effected indexes be refreshed?
    refresh: Boolean
    timeout: String = "1m"

    # Sets the number of shard copies that must be active before proceeding with
    # the reindex operation. Defaults to 1, meaning the primary shard only. Set to
    # `all` for all shard copies, otherwise set to any non-negative value less
    # than or equal to the total number of copies for the shard (number of replicas + 1)
    waitForActiveShards: String

    # Should the request should block until the reindex is complete.
    waitForCompletion: Boolean

    # The throttle to set on this request in sub-requests per second. -1 means set
    # no throttle as does "unlimited" which is the only non-float this accepts.
    requestsPerSecond: Float
  ): JSON

  # Perform a [reindexRethrottle](https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-reindex.html) request
  reindexRethrottle(
    # The throttle to set on this request in floating sub-requests per second. -1 means set no throttle.
    requestsPerSecond: Float

    # The task id to rethrottle
    taskId: String
  ): JSON

  # Perform a [renderSearchTemplate](http://www.elasticsearch.org/guide/en/elasticsearch/reference/5.x/search-template.html) request
  renderSearchTemplate(
    # The id of the stored search template
    id: String
  ): JSON

  # Perform a [scroll](https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-request-scroll.html) request
  scroll(
    # Specify how long a consistent view of the index should be maintained for scrolled search
    scroll: String

    # The scroll ID
    scrollId: String
  ): JSON

  # Perform a [search](https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-search.html) request
  search(
    # The analyzer to use for the query string
    analyzer: String

    # Specify whether wildcard and prefix queries should be analyzed (default: false)
    analyzeWildcard: Boolean
    defaultOperator: Elastic50Enum_DefaultOperator = OR

    # The field to use as default where no field prefix is given in the query string
    df: String

    # Specify whether to return detailed information about score computation as part of a hit
    explain: Boolean

    # A comma-separated list of stored fields to return as part of a hit
    storedFields: JSON

    # A comma-separated list of fields to return as the docvalue representation of a field for each hit
    docvalueFields: JSON

    # A comma-separated list of fields to return as the docvalue representation of a field for each hit
    fielddataFields: JSON

    # Starting offset (default: 0)
    from: Float

    # Whether specified concrete indices should be ignored when unavailable (missing or closed)
    ignoreUnavailable: Boolean

    # Whether to ignore if a wildcard indices expression resolves into no concrete
    # indices. (This includes `_all` string or when no indices have been specified)
    allowNoIndices: Boolean
    expandWildcards: Elastic50Enum_ExpandWildcards = open

    # Specify whether format-based query failures (such as providing text to a numeric field) should be ignored
    lenient: Boolean

    # Specify whether query terms should be lowercased
    lowercaseExpandedTerms: Boolean

    # Specify the node or shard the operation should be performed on (default: random)
    preference: String

    # Query in the Lucene query string syntax
    q: String

    # A comma-separated list of specific routing values
    routing: JSON

    # Specify how long a consistent view of the index should be maintained for scrolled search
    scroll: String

    # Search operation type
    searchType: Elastic50Enum_SearchType

    # Number of hits to return (default: 10)
    size: Float

    # A comma-separated list of <field>:<direction> pairs
    sort: JSON

    # True or false to return the _source field or not, or a list of fields to return
    _source: JSON

    # A list of fields to exclude from the returned _source field
    _sourceExclude: JSON

    # A list of fields to extract and return from the _source field
    _sourceInclude: JSON

    # The maximum number of documents to collect for each shard, upon reaching which the query execution will terminate early.
    terminateAfter: Float

    # Specific 'tag' of the request for logging and statistical purposes
    stats: JSON

    # Specify which field to use for suggestions
    suggestField: String
    suggestMode: Elastic50Enum_SuggestMode = missing

    # How many suggestions to return in response
    suggestSize: Float

    # The source text for which the suggestions should be returned
    suggestText: String

    # Explicit operation timeout
    timeout: String

    # Whether to calculate and return scores even if they are not used for sorting
    trackScores: Boolean

    # Specify whether to return document version as part of a hit
    version: Boolean

    # Specify if request cache should be used for this request or not, defaults to index level setting
    requestCache: Boolean

    # A comma-separated list of index names to search; use `_all` or empty string to perform the operation on all indices
    index: JSON

    # A comma-separated list of document types to search; leave empty to perform the operation on all types
    type: JSON
  ): JSON

  # Perform a [searchShards](https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-shards.html) request
  searchShards(
    # Specify the node or shard the operation should be performed on (default: random)
    preference: String

    # Specific routing value
    routing: String

    # Return local information, do not retrieve the state from master node (default: false)
    local: Boolean

    # Whether specified concrete indices should be ignored when unavailable (missing or closed)
    ignoreUnavailable: Boolean

    # Whether to ignore if a wildcard indices expression resolves into no concrete
    # indices. (This includes `_all` string or when no indices have been specified)
    allowNoIndices: Boolean
    expandWildcards: Elastic50Enum_ExpandWildcards = open

    # A comma-separated list of index names to search; use `_all` or empty string to perform the operation on all indices
    index: JSON

    # A comma-separated list of document types to search; leave empty to perform the operation on all types
    type: JSON
  ): JSON

  # Perform a [searchTemplate](https://www.elastic.co/guide/en/elasticsearch/reference/current/search-template.html) request
  searchTemplate(
    # Whether specified concrete indices should be ignored when unavailable (missing or closed)
    ignoreUnavailable: Boolean

    # Whether to ignore if a wildcard indices expression resolves into no concrete
    # indices. (This includes `_all` string or when no indices have been specified)
    allowNoIndices: Boolean
    expandWildcards: Elastic50Enum_ExpandWildcards = open

    # Specify the node or shard the operation should be performed on (default: random)
    preference: String

    # A comma-separated list of specific routing values
    routing: JSON

    # Specify how long a consistent view of the index should be maintained for scrolled search
    scroll: String

    # Search operation type
    searchType: Elastic50Enum_SearchType_1

    # A comma-separated list of index names to search; use `_all` or empty string to perform the operation on all indices
    index: JSON

    # A comma-separated list of document types to search; leave empty to perform the operation on all types
    type: JSON
  ): JSON
  snapshot: Elastic50Methods_Snapshot

  # Perform a [suggest](https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-suggesters.html) request
  suggest(
    # Whether specified concrete indices should be ignored when unavailable (missing or closed)
    ignoreUnavailable: Boolean

    # Whether to ignore if a wildcard indices expression resolves into no concrete
    # indices. (This includes `_all` string or when no indices have been specified)
    allowNoIndices: Boolean
    expandWildcards: Elastic50Enum_ExpandWildcards = open

    # Specify the node or shard the operation should be performed on (default: random)
    preference: String

    # Specific routing value
    routing: String

    # A comma-separated list of index names to restrict the operation; use `_all`
    # or empty string to perform the operation on all indices
    index: JSON
  ): JSON
  tasks: Elastic50Methods_Tasks

  # Perform a [termvectors](https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-termvectors.html) request
  termvectors(
    # Specifies if total term frequency and document frequency should be returned.
    termStatistics: Boolean
    fieldStatistics: Boolean = true

    # A comma-separated list of fields to return.
    fields: JSON
    offsets: Boolean = true
    positions: Boolean = true
    payloads: Boolean = true

    # Specify the node or shard the operation should be performed on (default: random).
    preference: String

    # Specific routing value.
    routing: String

    # Parent id of documents.
    parent: String

    # Specifies if request is real-time as opposed to near-real-time (default: true).
    realtime: Boolean

    # Explicit version number for concurrency control
    version: Float

    # Specific version type
    versionType: Elastic50Enum_VersionType

    # The index in which the document resides.
    index: String

    # The type of the document.
    type: String

    # The id of the document, when not specified a doc param should be supplied.
    id: String
  ): JSON

  # Perform a [update](https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-update.html) request
  update(
    # Sets the number of shard copies that must be active before proceeding with
    # the update operation. Defaults to 1, meaning the primary shard only. Set to
    # `all` for all shard copies, otherwise set to any non-negative value less
    # than or equal to the total number of copies for the shard (number of replicas + 1)
    waitForActiveShards: String

    # A comma-separated list of fields to return in the response
    fields: JSON

    # True or false to return the _source field or not, or a list of fields to return
    _source: JSON

    # A list of fields to exclude from the returned _source field
    _sourceExclude: JSON

    # A list of fields to extract and return from the _source field
    _sourceInclude: JSON

    # The script language (default: groovy)
    lang: String

    # ID of the parent document. Is is only used for routing and when for the upsert request
    parent: String

    # If `true` then refresh the effected shards to make this operation visible to
    # search, if `wait_for` then wait for a refresh to make this operation visible
    # to search, if `false` (the default) then do nothing with refreshes.
    refresh: Elastic50Enum_Refresh

    # Specify how many times should the operation be retried when a conflict occurs (default: 0)
    retryOnConflict: Float

    # Specific routing value
    routing: String

    # Explicit operation timeout
    timeout: String

    # Explicit timestamp for the document
    timestamp: String

    # Expiration time for the document
    ttl: String

    # Explicit version number for concurrency control
    version: Float

    # Specific version type
    versionType: Elastic50Enum_VersionType_1

    # The name of the index
    index: String

    # The type of the document
    type: String

    # Document ID
    id: String
  ): JSON

  # Perform a [updateByQuery](https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-update-by-query.html) request
  updateByQuery(
    # The analyzer to use for the query string
    analyzer: String

    # Specify whether wildcard and prefix queries should be analyzed (default: false)
    analyzeWildcard: Boolean
    defaultOperator: Elastic50Enum_DefaultOperator = OR

    # The field to use as default where no field prefix is given in the query string
    df: String

    # Starting offset (default: 0)
    from: Float

    # Whether specified concrete indices should be ignored when unavailable (missing or closed)
    ignoreUnavailable: Boolean

    # Whether to ignore if a wildcard indices expression resolves into no concrete
    # indices. (This includes `_all` string or when no indices have been specified)
    allowNoIndices: Boolean
    conflicts: Elastic50Enum_Conflicts = abort
    expandWildcards: Elastic50Enum_ExpandWildcards = open

    # Specify whether format-based query failures (such as providing text to a numeric field) should be ignored
    lenient: Boolean

    # Specify whether query terms should be lowercased
    lowercaseExpandedTerms: Boolean

    # Ingest pipeline to set on index requests made by this action. (default: none)
    pipeline: String

    # Specify the node or shard the operation should be performed on (default: random)
    preference: String

    # Query in the Lucene query string syntax
    q: String

    # A comma-separated list of specific routing values
    routing: JSON

    # Specify how long a consistent view of the index should be maintained for scrolled search
    scroll: String

    # Search operation type
    searchType: Elastic50Enum_SearchType

    # Explicit timeout for each search request. Defaults to no timeout.
    searchTimeout: String

    # Number of hits to return (default: 10)
    size: Float

    # A comma-separated list of <field>:<direction> pairs
    sort: JSON

    # True or false to return the _source field or not, or a list of fields to return
    _source: JSON

    # A list of fields to exclude from the returned _source field
    _sourceExclude: JSON

    # A list of fields to extract and return from the _source field
    _sourceInclude: JSON

    # The maximum number of documents to collect for each shard, upon reaching which the query execution will terminate early.
    terminateAfter: Float

    # Specific 'tag' of the request for logging and statistical purposes
    stats: JSON

    # Specify whether to return document version as part of a hit
    version: Boolean

    # Should the document increment the version number (internal) on hit or not (reindex)
    versionType: Boolean

    # Specify if request cache should be used for this request or not, defaults to index level setting
    requestCache: Boolean

    # Should the effected indexes be refreshed?
    refresh: Boolean
    timeout: String = "1m"

    # Sets the number of shard copies that must be active before proceeding with
    # the update by query operation. Defaults to 1, meaning the primary shard
    # only. Set to `all` for all shard copies, otherwise set to any non-negative
    # value less than or equal to the total number of copies for the shard (number
    # of replicas + 1)
    waitForActiveShards: String

    # Size on the scroll request powering the update_by_query
    scrollSize: Float

    # Should the request should block until the update by query operation is complete.
    waitForCompletion: Boolean

    # The throttle to set on this request in sub-requests per second. -1 means set
    # no throttle as does "unlimited" which is the only non-float this accepts.
    requestsPerSecond: Float

    # A comma-separated list of index names to search; use `_all` or empty string to perform the operation on all indices
    index: JSON

    # A comma-separated list of document types to search; leave empty to perform the operation on all types
    type: JSON
  ): JSON
}

enum Elastic50Enum_Bytes {
  b
  k
  kb
  m
  mb
  g
  gb
  t
  tb
  p
  pb
}

enum Elastic50Enum_Bytes_1 {
  b
  k
  m
  g
}

enum Elastic50Enum_Conflicts {
  abort
  proceed
}

enum Elastic50Enum_DefaultOperator {
  AND
  OR
}

enum Elastic50Enum_ExpandWildcards {
  open
  closed
  none
  all
}

enum Elastic50Enum_Format {
  detailed
  text
}

enum Elastic50Enum_GroupBy {
  nodes
  parents
}

enum Elastic50Enum_Health {
  green
  yellow
  red
}

enum Elastic50Enum_Level {
  cluster
  indices
  shards
}

enum Elastic50Enum_Level_1 {
  indices
  cluster
}

enum Elastic50Enum_Level_2 {
  indices
  node
  shards
}

enum Elastic50Enum_OpType {
  index
  create
}

enum Elastic50Enum_PercolateFormat {
  ids
}

enum Elastic50Enum_Refresh {
  true
  false
  wait_for
  empty_string
}

enum Elastic50Enum_SearchType {
  query_then_fetch
  dfs_query_then_fetch
}

enum Elastic50Enum_SearchType_1 {
  query_then_fetch
  query_and_fetch
  dfs_query_then_fetch
  dfs_query_and_fetch
}

enum Elastic50Enum_Size {
  empty_string
  k
  m
  g
  t
  p
}

enum Elastic50Enum_SuggestMode {
  missing
  popular
  always
}

enum Elastic50Enum_Type {
  cpu
  wait
  block
}

enum Elastic50Enum_VersionType {
  internal
  external
  external_gte
  force
}

enum Elastic50Enum_VersionType_1 {
  internal
  force
}

enum Elastic50Enum_WaitForEvents {
  immediate
  urgent
  high
  normal
  low
  languid
}

enum Elastic50Enum_WaitForStatus {
  green
  yellow
  red
}

type Elastic50Methods_Cat {
  # Perform a [cat.aliases](http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/cat.html) request
  aliases(
    # a short version of the Accept header, e.g. json, yaml
    format: String = "json"

    # Return local information, do not retrieve the state from master node (default: false)
    local: Boolean

    # Explicit operation timeout for connection to master node
    masterTimeout: String

    # Comma-separated list of column names to display
    h: JSON

    # Return help information
    help: Boolean

    # Verbose mode. Display column headers
    v: Boolean

    # A comma-separated list of alias names to return
    name: JSON
  ): JSON

  # Perform a [cat.allocation](https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-allocation.html) request
  allocation(
    # a short version of the Accept header, e.g. json, yaml
    format: String = "json"

    # The unit in which to display byte values
    bytes: Elastic50Enum_Bytes

    # Return local information, do not retrieve the state from master node (default: false)
    local: Boolean

    # Explicit operation timeout for connection to master node
    masterTimeout: String

    # Comma-separated list of column names to display
    h: JSON

    # Return help information
    help: Boolean

    # Verbose mode. Display column headers
    v: Boolean

    # A comma-separated list of node IDs or names to limit the returned information
    nodeId: JSON
  ): JSON

  # Perform a [cat.count](https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-count.html) request
  count(
    # a short version of the Accept header, e.g. json, yaml
    format: String = "json"

    # Return local information, do not retrieve the state from master node (default: false)
    local: Boolean

    # Explicit operation timeout for connection to master node
    masterTimeout: String

    # Comma-separated list of column names to display
    h: JSON

    # Return help information
    help: Boolean

    # Verbose mode. Display column headers
    v: Boolean

    # A comma-separated list of index names to limit the returned information
    index: JSON
  ): JSON

  # Perform a [cat.fielddata](https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-fielddata.html) request
  fielddata(
    # a short version of the Accept header, e.g. json, yaml
    format: String = "json"

    # The unit in which to display byte values
    bytes: Elastic50Enum_Bytes

    # Return local information, do not retrieve the state from master node (default: false)
    local: Boolean

    # Explicit operation timeout for connection to master node
    masterTimeout: String

    # Comma-separated list of column names to display
    h: JSON

    # Return help information
    help: Boolean

    # Verbose mode. Display column headers
    v: Boolean

    # A comma-separated list of fields to return the fielddata size
    fields: JSON
  ): JSON

  # Perform a [cat.health](https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-health.html) request
  health(
    # a short version of the Accept header, e.g. json, yaml
    format: String = "json"

    # Return local information, do not retrieve the state from master node (default: false)
    local: Boolean

    # Explicit operation timeout for connection to master node
    masterTimeout: String

    # Comma-separated list of column names to display
    h: JSON

    # Return help information
    help: Boolean
    ts: Boolean = true

    # Verbose mode. Display column headers
    v: Boolean
  ): JSON

  # Perform a [cat.help](https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat.html) request
  help(
    # Return help information
    help: Boolean
  ): JSON

  # Perform a [cat.indices](https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-indices.html) request
  indices(
    # a short version of the Accept header, e.g. json, yaml
    format: String = "json"

    # The unit in which to display byte values
    bytes: Elastic50Enum_Bytes_1

    # Return local information, do not retrieve the state from master node (default: false)
    local: Boolean

    # Explicit operation timeout for connection to master node
    masterTimeout: String

    # Comma-separated list of column names to display
    h: JSON

    # A health status ("green", "yellow", or "red" to filter only indices matching the specified health status
    health: Elastic50Enum_Health

    # Return help information
    help: Boolean

    # Set to true to return stats only for primary shards
    pri: Boolean

    # Verbose mode. Display column headers
    v: Boolean

    # A comma-separated list of index names to limit the returned information
    index: JSON
  ): JSON

  # Perform a [cat.master](https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-master.html) request
  master(
    # a short version of the Accept header, e.g. json, yaml
    format: String = "json"

    # Return local information, do not retrieve the state from master node (default: false)
    local: Boolean

    # Explicit operation timeout for connection to master node
    masterTimeout: String

    # Comma-separated list of column names to display
    h: JSON

    # Return help information
    help: Boolean

    # Verbose mode. Display column headers
    v: Boolean
  ): JSON

  # Perform a [cat.nodeattrs](https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-nodeattrs.html) request
  nodeattrs(
    # a short version of the Accept header, e.g. json, yaml
    format: String = "json"

    # Return local information, do not retrieve the state from master node (default: false)
    local: Boolean

    # Explicit operation timeout for connection to master node
    masterTimeout: String

    # Comma-separated list of column names to display
    h: JSON

    # Return help information
    help: Boolean

    # Verbose mode. Display column headers
    v: Boolean
  ): JSON

  # Perform a [cat.nodes](https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-nodes.html) request
  nodes(
    # a short version of the Accept header, e.g. json, yaml
    format: String = "json"

    # Return the full node ID instead of the shortened version (default: false)
    fullId: Boolean

    # Return local information, do not retrieve the state from master node (default: false)
    local: Boolean

    # Explicit operation timeout for connection to master node
    masterTimeout: String

    # Comma-separated list of column names to display
    h: JSON

    # Return help information
    help: Boolean

    # Verbose mode. Display column headers
    v: Boolean
  ): JSON

  # Perform a [cat.pendingTasks](https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-pending-tasks.html) request
  pendingTasks(
    # a short version of the Accept header, e.g. json, yaml
    format: String = "json"

    # Return local information, do not retrieve the state from master node (default: false)
    local: Boolean

    # Explicit operation timeout for connection to master node
    masterTimeout: String

    # Comma-separated list of column names to display
    h: JSON

    # Return help information
    help: Boolean

    # Verbose mode. Display column headers
    v: Boolean
  ): JSON

  # Perform a [cat.plugins](https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-plugins.html) request
  plugins(
    # a short version of the Accept header, e.g. json, yaml
    format: String = "json"

    # Return local information, do not retrieve the state from master node (default: false)
    local: Boolean

    # Explicit operation timeout for connection to master node
    masterTimeout: String

    # Comma-separated list of column names to display
    h: JSON

    # Return help information
    help: Boolean

    # Verbose mode. Display column headers
    v: Boolean
  ): JSON

  # Perform a [cat.recovery](https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-recovery.html) request
  recovery(
    # a short version of the Accept header, e.g. json, yaml
    format: String = "json"

    # The unit in which to display byte values
    bytes: Elastic50Enum_Bytes

    # Explicit operation timeout for connection to master node
    masterTimeout: String

    # Comma-separated list of column names to display
    h: JSON

    # Return help information
    help: Boolean

    # Verbose mode. Display column headers
    v: Boolean

    # A comma-separated list of index names to limit the returned information
    index: JSON
  ): JSON

  # Perform a [cat.repositories](https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-repositories.html) request
  repositories(
    # a short version of the Accept header, e.g. json, yaml
    format: String = "json"

    # Return local information, do not retrieve the state from master node
    local: Boolean

    # Explicit operation timeout for connection to master node
    masterTimeout: String

    # Comma-separated list of column names to display
    h: JSON

    # Return help information
    help: Boolean

    # Verbose mode. Display column headers
    v: Boolean
  ): JSON

  # Perform a [cat.segments](https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-segments.html) request
  segments(
    # a short version of the Accept header, e.g. json, yaml
    format: String = "json"

    # Comma-separated list of column names to display
    h: JSON

    # Return help information
    help: Boolean

    # Verbose mode. Display column headers
    v: Boolean

    # A comma-separated list of index names to limit the returned information
    index: JSON
  ): JSON

  # Perform a [cat.shards](https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-shards.html) request
  shards(
    # a short version of the Accept header, e.g. json, yaml
    format: String = "json"

    # Return local information, do not retrieve the state from master node (default: false)
    local: Boolean

    # Explicit operation timeout for connection to master node
    masterTimeout: String

    # Comma-separated list of column names to display
    h: JSON

    # Return help information
    help: Boolean

    # Verbose mode. Display column headers
    v: Boolean

    # A comma-separated list of index names to limit the returned information
    index: JSON
  ): JSON

  # Perform a [cat.snapshots](https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-snapshots.html) request
  snapshots(
    # a short version of the Accept header, e.g. json, yaml
    format: String = "json"

    # Set to true to ignore unavailable snapshots
    ignoreUnavailable: Boolean

    # Explicit operation timeout for connection to master node
    masterTimeout: String

    # Comma-separated list of column names to display
    h: JSON

    # Return help information
    help: Boolean

    # Verbose mode. Display column headers
    v: Boolean

    # Name of repository from which to fetch the snapshot information
    repository: JSON
  ): JSON

  # Perform a [cat.tasks](https://www.elastic.co/guide/en/elasticsearch/reference/5.x/tasks.html) request
  tasks(
    # a short version of the Accept header, e.g. json, yaml
    format: String = "json"

    # A comma-separated list of node IDs or names to limit the returned
    # information; use `_local` to return information from the node you're
    # connecting to, leave empty to get information from all nodes
    nodeId: JSON

    # A comma-separated list of actions that should be returned. Leave empty to return all.
    actions: JSON

    # Return detailed task information (default: false)
    detailed: Boolean

    # Return tasks with specified parent node.
    parentNode: String

    # Return tasks with specified parent task id. Set to -1 to return all.
    parentTask: Float

    # Comma-separated list of column names to display
    h: JSON

    # Return help information
    help: Boolean

    # Verbose mode. Display column headers
    v: Boolean
  ): JSON

  # Perform a [cat.threadPool](https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-thread-pool.html) request
  threadPool(
    # a short version of the Accept header, e.g. json, yaml
    format: String = "json"

    # The multiplier in which to display values
    size: Elastic50Enum_Size

    # Return local information, do not retrieve the state from master node (default: false)
    local: Boolean

    # Explicit operation timeout for connection to master node
    masterTimeout: String

    # Comma-separated list of column names to display
    h: JSON

    # Return help information
    help: Boolean

    # Verbose mode. Display column headers
    v: Boolean

    # A comma-separated list of regular-expressions to filter the thread pools in the output
    threadPoolPatterns: JSON
  ): JSON
}

type Elastic50Methods_Cluster {
  # Perform a [cluster.allocationExplain](https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cluster-allocation-explain.html) request
  allocationExplain(
    # Return 'YES' decisions in explanation (default: false)
    includeYesDecisions: Boolean

    # Return information about disk usage and shard sizes (default: false)
    includeDiskInfo: Boolean
  ): JSON

  # Perform a [cluster.getSettings](https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cluster-update-settings.html) request
  getSettings(
    # Return settings in flat format (default: false)
    flatSettings: Boolean

    # Explicit operation timeout for connection to master node
    masterTimeout: String

    # Explicit operation timeout
    timeout: String

    # Whether to return all default clusters setting.
    includeDefaults: Boolean
  ): JSON

  # Perform a [cluster.health](https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cluster-health.html) request
  health(
    level: Elastic50Enum_Level = cluster

    # Return local information, do not retrieve the state from master node (default: false)
    local: Boolean

    # Explicit operation timeout for connection to master node
    masterTimeout: String

    # Explicit operation timeout
    timeout: String

    # Wait until the specified number of shards is active
    waitForActiveShards: String

    # Wait until the specified number of nodes is available
    waitForNodes: String

    # Wait until all currently queued events with the given priority are processed
    waitForEvents: Elastic50Enum_WaitForEvents

    # Whether to wait until there are no relocating shards in the cluster
    waitForNoRelocatingShards: Boolean

    # Wait until cluster is in a specific state
    waitForStatus: Elastic50Enum_WaitForStatus

    # Limit the information returned to a specific index
    index: JSON
  ): JSON

  # Perform a [cluster.pendingTasks](https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cluster-pending.html) request
  pendingTasks(
    # Return local information, do not retrieve the state from master node (default: false)
    local: Boolean

    # Specify timeout for connection to master
    masterTimeout: String
  ): JSON

  # Perform a [cluster.putSettings](https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cluster-update-settings.html) request
  putSettings(
    # Return settings in flat format (default: false)
    flatSettings: Boolean

    # Explicit operation timeout for connection to master node
    masterTimeout: String

    # Explicit operation timeout
    timeout: String
  ): JSON

  # Perform a [cluster.reroute](https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cluster-reroute.html) request
  reroute(
    # Simulate the operation only and return the resulting state
    dryRun: Boolean

    # Return an explanation of why the commands can or cannot be executed
    explain: Boolean

    # Retries allocation of shards that are blocked due to too many subsequent allocation failures
    retryFailed: Boolean

    # Limit the information returned to the specified metrics. Defaults to all but metadata
    metric: JSON

    # Explicit operation timeout for connection to master node
    masterTimeout: String

    # Explicit operation timeout
    timeout: String
  ): JSON

  # Perform a [cluster.state](https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cluster-state.html) request
  state(
    # Return local information, do not retrieve the state from master node (default: false)
    local: Boolean

    # Specify timeout for connection to master
    masterTimeout: String

    # Return settings in flat format (default: false)
    flatSettings: Boolean

    # Whether specified concrete indices should be ignored when unavailable (missing or closed)
    ignoreUnavailable: Boolean

    # Whether to ignore if a wildcard indices expression resolves into no concrete
    # indices. (This includes `_all` string or when no indices have been specified)
    allowNoIndices: Boolean
    expandWildcards: Elastic50Enum_ExpandWildcards = open

    # Limit the information returned to the specified metrics
    metric: JSON

    # A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices
    index: JSON
  ): JSON

  # Perform a [cluster.stats](https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cluster-stats.html) request
  stats(
    # Return settings in flat format (default: false)
    flatSettings: Boolean

    # Whether to return time and byte values in human-readable format.
    human: Boolean

    # Explicit operation timeout
    timeout: String

    # A comma-separated list of node IDs or names to limit the returned
    # information; use `_local` to return information from the node you're
    # connecting to, leave empty to get information from all nodes
    nodeId: JSON
  ): JSON
}

type Elastic50Methods_Indices {
  # Perform a [indices.analyze](https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-analyze.html) request
  analyze(
    # The name of the analyzer to use
    analyzer: String

    # A comma-separated list of character filters to use for the analysis
    charFilter: JSON

    # Use the analyzer configured for this field (instead of passing the analyzer name)
    field: String

    # A comma-separated list of filters to use for the analysis
    filter: JSON

    # The name of the index to scope the operation
    index: String

    # With `true`, specify that a local shard should be used if available, with `false`, use a random shard (default: true)
    preferLocal: Boolean

    # The text on which the analysis should be performed (when request body is not used)
    text: JSON

    # The name of the tokenizer to use for the analysis
    tokenizer: String

    # With `true`, outputs more advanced details. (default: false)
    explain: Boolean

    # A comma-separated list of token attributes to output, this parameter works only with `explain=true`
    attributes: JSON
    format: Elastic50Enum_Format = detailed
  ): JSON

  # Perform a [indices.clearCache](https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-clearcache.html) request
  clearCache(
    # Clear field data
    fieldData: Boolean

    # Clear field data
    fielddata: Boolean

    # A comma-separated list of fields to clear when using the `field_data` parameter (default: all)
    fields: JSON

    # Clear query caches
    query: Boolean

    # Whether specified concrete indices should be ignored when unavailable (missing or closed)
    ignoreUnavailable: Boolean

    # Whether to ignore if a wildcard indices expression resolves into no concrete
    # indices. (This includes `_all` string or when no indices have been specified)
    allowNoIndices: Boolean
    expandWildcards: Elastic50Enum_ExpandWildcards = open

    # A comma-separated list of index name to limit the operation
    index: JSON

    # Clear the recycler cache
    recycler: Boolean

    # Clear request cache
    request: Boolean
  ): JSON

  # Perform a [indices.close](https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-open-close.html) request
  close(
    # Explicit operation timeout
    timeout: String

    # Specify timeout for connection to master
    masterTimeout: String

    # Whether specified concrete indices should be ignored when unavailable (missing or closed)
    ignoreUnavailable: Boolean

    # Whether to ignore if a wildcard indices expression resolves into no concrete
    # indices. (This includes `_all` string or when no indices have been specified)
    allowNoIndices: Boolean
    expandWildcards: Elastic50Enum_ExpandWildcards = open

    # A comma separated list of indices to close
    index: JSON
  ): JSON

  # Perform a [indices.create](https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-create-index.html) request
  create(
    # Set the number of active shards to wait for before the operation returns.
    waitForActiveShards: String

    # Explicit operation timeout
    timeout: String

    # Specify timeout for connection to master
    masterTimeout: String

    # Whether to update the mapping for all fields with the same name across all types or not
    updateAllTypes: Boolean

    # The name of the index
    index: String
  ): JSON

  # Perform a [indices.deleteAlias](https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-aliases.html) request
  deleteAlias(
    # Explicit timestamp for the document
    timeout: String

    # Specify timeout for connection to master
    masterTimeout: String

    # A comma-separated list of index names (supports wildcards); use `_all` for all indices
    index: JSON

    # A comma-separated list of aliases to delete (supports wildcards); use `_all`
    # to delete all aliases for the specified indices.
    name: JSON
  ): JSON

  # Perform a [indices.deleteTemplate](https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-templates.html) request
  deleteTemplate(
    # Explicit operation timeout
    timeout: String

    # Specify timeout for connection to master
    masterTimeout: String

    # The name of the template
    name: String
  ): JSON

  # Perform a [indices.exists](https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-exists.html) request
  exists(
    # Whether specified concrete indices should be ignored when unavailable (missing or closed)
    ignoreUnavailable: Boolean

    # Whether to ignore if a wildcard indices expression resolves into no concrete
    # indices. (This includes `_all` string or when no indices have been specified)
    allowNoIndices: Boolean
    expandWildcards: Elastic50Enum_ExpandWildcards = open

    # Return local information, do not retrieve the state from master node (default: false)
    local: Boolean

    # A comma-separated list of indices to check
    index: JSON
  ): JSON

  # Perform a [indices.existsAlias](https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-aliases.html) request
  existsAlias(
    # Whether specified concrete indices should be ignored when unavailable (missing or closed)
    ignoreUnavailable: Boolean

    # Whether to ignore if a wildcard indices expression resolves into no concrete
    # indices. (This includes `_all` string or when no indices have been specified)
    allowNoIndices: Boolean
    expandWildcards: Elastic50Enum_ExpandWildcards = null

    # Return local information, do not retrieve the state from master node (default: false)
    local: Boolean

    # A comma-separated list of index names to filter aliases
    index: JSON

    # A comma-separated list of alias names to return
    name: JSON
  ): JSON

  # Perform a [indices.existsTemplate](https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-templates.html) request
  existsTemplate(
    # Explicit operation timeout for connection to master node
    masterTimeout: String

    # Return local information, do not retrieve the state from master node (default: false)
    local: Boolean

    # The name of the template
    name: String
  ): JSON

  # Perform a [indices.existsType](https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-types-exists.html) request
  existsType(
    # Whether specified concrete indices should be ignored when unavailable (missing or closed)
    ignoreUnavailable: Boolean

    # Whether to ignore if a wildcard indices expression resolves into no concrete
    # indices. (This includes `_all` string or when no indices have been specified)
    allowNoIndices: Boolean
    expandWildcards: Elastic50Enum_ExpandWildcards = open

    # Return local information, do not retrieve the state from master node (default: false)
    local: Boolean

    # A comma-separated list of index names; use `_all` to check the types across all indices
    index: JSON

    # A comma-separated list of document types to check
    type: JSON
  ): JSON

  # Perform a [indices.flush](https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-flush.html) request
  flush(
    # Whether a flush should be forced even if it is not necessarily needed ie. if
    # no changes will be committed to the index. This is useful if transaction log
    # IDs should be incremented even if no uncommitted changes are present. (This
    # setting can be considered as internal)
    force: Boolean

    # If set to true the flush operation will block until the flush can be
    # executed if another flush operation is already executing. The default is
    # true. If set to false the flush will be skipped iff if another flush
    # operation is already running.
    waitIfOngoing: Boolean

    # Whether specified concrete indices should be ignored when unavailable (missing or closed)
    ignoreUnavailable: Boolean

    # Whether to ignore if a wildcard indices expression resolves into no concrete
    # indices. (This includes `_all` string or when no indices have been specified)
    allowNoIndices: Boolean
    expandWildcards: Elastic50Enum_ExpandWildcards = open

    # A comma-separated list of index names; use `_all` or empty string for all indices
    index: JSON
  ): JSON

  # Perform a [indices.flushSynced](https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-synced-flush.html) request
  flushSynced(
    # Whether specified concrete indices should be ignored when unavailable (missing or closed)
    ignoreUnavailable: Boolean

    # Whether to ignore if a wildcard indices expression resolves into no concrete
    # indices. (This includes `_all` string or when no indices have been specified)
    allowNoIndices: Boolean
    expandWildcards: Elastic50Enum_ExpandWildcards = open

    # A comma-separated list of index names; use `_all` or empty string for all indices
    index: JSON
  ): JSON

  # Perform a [indices.forcemerge](https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-forcemerge.html) request
  forcemerge(
    # Specify whether the index should be flushed after performing the operation (default: true)
    flush: Boolean

    # Whether specified concrete indices should be ignored when unavailable (missing or closed)
    ignoreUnavailable: Boolean

    # Whether to ignore if a wildcard indices expression resolves into no concrete
    # indices. (This includes `_all` string or when no indices have been specified)
    allowNoIndices: Boolean
    expandWildcards: Elastic50Enum_ExpandWildcards = open

    # The number of segments the index should be merged into (default: dynamic)
    maxNumSegments: Float

    # Specify whether the operation should only expunge deleted documents
    onlyExpungeDeletes: Boolean

    # TODO: ?
    operationThreading: JSON

    # Specify whether the request should block until the merge process is finished (default: true)
    waitForMerge: Boolean

    # A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices
    index: JSON
  ): JSON

  # Perform a [indices.get](https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-get-index.html) request
  get(
    # Return local information, do not retrieve the state from master node (default: false)
    local: Boolean

    # Ignore unavailable indexes (default: false)
    ignoreUnavailable: Boolean

    # Ignore if a wildcard expression resolves to no concrete indices (default: false)
    allowNoIndices: Boolean
    expandWildcards: Elastic50Enum_ExpandWildcards = open

    # Return settings in flat format (default: false)
    flatSettings: Boolean

    # Whether to return version and creation date values in human-readable format.
    human: Boolean

    # Whether to return all default setting for each of the indices.
    includeDefaults: Boolean

    # A comma-separated list of index names
    index: JSON

    # A comma-separated list of features
    feature: JSON
  ): JSON

  # Perform a [indices.getAlias](https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-aliases.html) request
  getAlias(
    # Whether specified concrete indices should be ignored when unavailable (missing or closed)
    ignoreUnavailable: Boolean

    # Whether to ignore if a wildcard indices expression resolves into no concrete
    # indices. (This includes `_all` string or when no indices have been specified)
    allowNoIndices: Boolean
    expandWildcards: Elastic50Enum_ExpandWildcards = all

    # Return local information, do not retrieve the state from master node (default: false)
    local: Boolean

    # A comma-separated list of index names to filter aliases
    index: JSON

    # A comma-separated list of alias names to return
    name: JSON
  ): JSON

  # Perform a [indices.getFieldMapping](https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-get-field-mapping.html) request
  getFieldMapping(
    # Whether the default mapping values should be returned as well
    includeDefaults: Boolean

    # Whether specified concrete indices should be ignored when unavailable (missing or closed)
    ignoreUnavailable: Boolean

    # Whether to ignore if a wildcard indices expression resolves into no concrete
    # indices. (This includes `_all` string or when no indices have been specified)
    allowNoIndices: Boolean
    expandWildcards: Elastic50Enum_ExpandWildcards = open

    # Return local information, do not retrieve the state from master node (default: false)
    local: Boolean

    # A comma-separated list of index names
    index: JSON

    # A comma-separated list of document types
    type: JSON

    # A comma-separated list of fields
    fields: JSON
  ): JSON

  # Perform a [indices.getMapping](https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-get-mapping.html) request
  getMapping(
    # Whether specified concrete indices should be ignored when unavailable (missing or closed)
    ignoreUnavailable: Boolean

    # Whether to ignore if a wildcard indices expression resolves into no concrete
    # indices. (This includes `_all` string or when no indices have been specified)
    allowNoIndices: Boolean
    expandWildcards: Elastic50Enum_ExpandWildcards = open

    # Return local information, do not retrieve the state from master node (default: false)
    local: Boolean

    # A comma-separated list of index names
    index: JSON

    # A comma-separated list of document types
    type: JSON
  ): JSON

  # Perform a [indices.getSettings](https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-get-settings.html) request
  getSettings(
    # Whether specified concrete indices should be ignored when unavailable (missing or closed)
    ignoreUnavailable: Boolean

    # Whether to ignore if a wildcard indices expression resolves into no concrete
    # indices. (This includes `_all` string or when no indices have been specified)
    allowNoIndices: Boolean
    expandWildcards: Elastic50Enum_ExpandWildcards = null

    # Return settings in flat format (default: false)
    flatSettings: Boolean

    # Return local information, do not retrieve the state from master node (default: false)
    local: Boolean

    # Whether to return version and creation date values in human-readable format.
    human: Boolean

    # Whether to return all default setting for each of the indices.
    includeDefaults: Boolean

    # A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices
    index: JSON

    # The name of the settings that should be included
    name: JSON
  ): JSON

  # Perform a [indices.getTemplate](https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-templates.html) request
  getTemplate(
    # Return settings in flat format (default: false)
    flatSettings: Boolean

    # Explicit operation timeout for connection to master node
    masterTimeout: String

    # Return local information, do not retrieve the state from master node (default: false)
    local: Boolean

    # The comma separated names of the index templates
    name: JSON
  ): JSON

  # Perform a [indices.getUpgrade](https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-upgrade.html) request
  getUpgrade(
    # Whether specified concrete indices should be ignored when unavailable (missing or closed)
    ignoreUnavailable: Boolean

    # Whether to ignore if a wildcard indices expression resolves into no concrete
    # indices. (This includes `_all` string or when no indices have been specified)
    allowNoIndices: Boolean
    expandWildcards: Elastic50Enum_ExpandWildcards = open

    # Whether to return time and byte values in human-readable format.
    human: Boolean

    # A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices
    index: JSON
  ): JSON

  # Perform a [indices.open](https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-open-close.html) request
  open(
    # Explicit operation timeout
    timeout: String

    # Specify timeout for connection to master
    masterTimeout: String

    # Whether specified concrete indices should be ignored when unavailable (missing or closed)
    ignoreUnavailable: Boolean

    # Whether to ignore if a wildcard indices expression resolves into no concrete
    # indices. (This includes `_all` string or when no indices have been specified)
    allowNoIndices: Boolean
    expandWildcards: Elastic50Enum_ExpandWildcards = closed

    # A comma separated list of indices to open
    index: JSON
  ): JSON

  # Perform a [indices.putAlias](https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-aliases.html) request
  putAlias(
    # Explicit timestamp for the document
    timeout: String

    # Specify timeout for connection to master
    masterTimeout: String

    # A comma-separated list of index names the alias should point to (supports
    # wildcards); use `_all` to perform the operation on all indices.
    index: JSON

    # The name of the alias to be created or updated
    name: String
  ): JSON

  # Perform a [indices.putMapping](https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-put-mapping.html) request
  putMapping(
    # Explicit operation timeout
    timeout: String

    # Specify timeout for connection to master
    masterTimeout: String

    # Whether specified concrete indices should be ignored when unavailable (missing or closed)
    ignoreUnavailable: Boolean

    # Whether to ignore if a wildcard indices expression resolves into no concrete
    # indices. (This includes `_all` string or when no indices have been specified)
    allowNoIndices: Boolean
    expandWildcards: Elastic50Enum_ExpandWildcards = open

    # Whether to update the mapping for all fields with the same name across all types or not
    updateAllTypes: Boolean

    # A comma-separated list of index names the mapping should be added to
    # (supports wildcards); use `_all` or omit to add the mapping on all indices.
    index: JSON

    # The name of the document type
    type: String
  ): JSON

  # Perform a [indices.putSettings](https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-update-settings.html) request
  putSettings(
    # Specify timeout for connection to master
    masterTimeout: String

    # Whether to update existing settings. If set to `true` existing settings on
    # an index remain unchanged, the default is `false`
    preserveExisting: Boolean

    # Whether specified concrete indices should be ignored when unavailable (missing or closed)
    ignoreUnavailable: Boolean

    # Whether to ignore if a wildcard indices expression resolves into no concrete
    # indices. (This includes `_all` string or when no indices have been specified)
    allowNoIndices: Boolean
    expandWildcards: Elastic50Enum_ExpandWildcards = open

    # Return settings in flat format (default: false)
    flatSettings: Boolean

    # A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices
    index: JSON
  ): JSON

  # Perform a [indices.putTemplate](https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-templates.html) request
  putTemplate(
    # The order for this template when merging multiple matching ones (higher
    # numbers are merged later, overriding the lower numbers)
    order: Float

    # Whether the index template should only be added if new or can also replace an existing one
    create: Boolean

    # Explicit operation timeout
    timeout: String

    # Specify timeout for connection to master
    masterTimeout: String

    # Return settings in flat format (default: false)
    flatSettings: Boolean

    # The name of the template
    name: String
  ): JSON

  # Perform a [indices.recovery](https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-recovery.html) request
  recovery(
    # Whether to display detailed information about shard recovery
    detailed: Boolean

    # Display only those recoveries that are currently on-going
    activeOnly: Boolean

    # Whether to return time and byte values in human-readable format.
    human: Boolean

    # A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices
    index: JSON
  ): JSON

  # Perform a [indices.refresh](https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-refresh.html) request
  refresh(
    # Whether specified concrete indices should be ignored when unavailable (missing or closed)
    ignoreUnavailable: Boolean

    # Whether to ignore if a wildcard indices expression resolves into no concrete
    # indices. (This includes `_all` string or when no indices have been specified)
    allowNoIndices: Boolean
    expandWildcards: Elastic50Enum_ExpandWildcards = open

    # Force a refresh even if not required
    force: Boolean

    # TODO: ?
    operationThreading: JSON

    # A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices
    index: JSON
  ): JSON

  # Perform a [indices.rollover](https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-rollover-index.html) request
  rollover(
    # Explicit operation timeout
    timeout: String

    # If set to true the rollover action will only be validated but not actually
    # performed even if a condition matches. The default is false
    dryRun: Boolean

    # Specify timeout for connection to master
    masterTimeout: String

    # Set the number of active shards to wait for on the newly created rollover index before the operation returns.
    waitForActiveShards: String

    # The name of the alias to rollover
    alias: String

    # The name of the rollover index
    newIndex: String
  ): JSON

  # Perform a [indices.segments](https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-segments.html) request
  segments(
    # Whether specified concrete indices should be ignored when unavailable (missing or closed)
    ignoreUnavailable: Boolean

    # Whether to ignore if a wildcard indices expression resolves into no concrete
    # indices. (This includes `_all` string or when no indices have been specified)
    allowNoIndices: Boolean
    expandWildcards: Elastic50Enum_ExpandWildcards = open

    # Whether to return time and byte values in human-readable format.
    human: Boolean

    # TODO: ?
    operationThreading: JSON

    # Includes detailed memory usage by Lucene.
    verbose: Boolean

    # A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices
    index: JSON
  ): JSON

  # Perform a [indices.shardStores](https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-shards-stores.html) request
  shardStores(
    # A comma-separated list of statuses used to filter on shards to get store information for
    status: JSON

    # Whether specified concrete indices should be ignored when unavailable (missing or closed)
    ignoreUnavailable: Boolean

    # Whether to ignore if a wildcard indices expression resolves into no concrete
    # indices. (This includes `_all` string or when no indices have been specified)
    allowNoIndices: Boolean
    expandWildcards: Elastic50Enum_ExpandWildcards = open

    # TODO: ?
    operationThreading: JSON

    # A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices
    index: JSON
  ): JSON

  # Perform a [indices.shrink](https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-shrink-index.html) request
  shrink(
    # Explicit operation timeout
    timeout: String

    # Specify timeout for connection to master
    masterTimeout: String

    # Set the number of active shards to wait for on the shrunken index before the operation returns.
    waitForActiveShards: String

    # The name of the source index to shrink
    index: String

    # The name of the target index to shrink into
    target: String
  ): JSON

  # Perform a [indices.stats](https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-stats.html) request
  stats(
    # A comma-separated list of fields for `fielddata` and `suggest` index metric (supports wildcards)
    completionFields: JSON

    # A comma-separated list of fields for `fielddata` index metric (supports wildcards)
    fielddataFields: JSON

    # A comma-separated list of fields for `fielddata` and `completion` index metric (supports wildcards)
    fields: JSON

    # A comma-separated list of search groups for `search` index metric
    groups: JSON

    # Whether to return time and byte values in human-readable format.
    human: Boolean
    level: Elastic50Enum_Level = indices

    # A comma-separated list of document types for the `indexing` index metric
    types: JSON

    # A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices
    index: JSON

    # Limit the information returned the specific metrics.
    metric: JSON
  ): JSON

  # Perform a [indices.updateAliases](https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-aliases.html) request
  updateAliases(
    # Request timeout
    timeout: String

    # Specify timeout for connection to master
    masterTimeout: String
  ): JSON

  # Perform a [indices.upgrade](https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-upgrade.html) request
  upgrade(
    # Whether to ignore if a wildcard indices expression resolves into no concrete
    # indices. (This includes `_all` string or when no indices have been specified)
    allowNoIndices: Boolean
    expandWildcards: Elastic50Enum_ExpandWildcards = open

    # Whether specified concrete indices should be ignored when unavailable (missing or closed)
    ignoreUnavailable: Boolean

    # Specify whether the request should block until the all segments are upgraded (default: false)
    waitForCompletion: Boolean

    # If true, only ancient (an older Lucene major release) segments will be upgraded
    onlyAncientSegments: Boolean

    # A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices
    index: JSON
  ): JSON

  # Perform a [indices.validateQuery](https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-validate.html) request
  validateQuery(
    # Return detailed information about the error
    explain: Boolean

    # Whether specified concrete indices should be ignored when unavailable (missing or closed)
    ignoreUnavailable: Boolean

    # Whether to ignore if a wildcard indices expression resolves into no concrete
    # indices. (This includes `_all` string or when no indices have been specified)
    allowNoIndices: Boolean
    expandWildcards: Elastic50Enum_ExpandWildcards = open

    # TODO: ?
    operationThreading: JSON

    # Query in the Lucene query string syntax
    q: String

    # The analyzer to use for the query string
    analyzer: String

    # Specify whether wildcard and prefix queries should be analyzed (default: false)
    analyzeWildcard: Boolean
    defaultOperator: Elastic50Enum_DefaultOperator = OR

    # The field to use as default where no field prefix is given in the query string
    df: String

    # Specify whether format-based query failures (such as providing text to a numeric field) should be ignored
    lenient: Boolean

    # Specify whether query terms should be lowercased
    lowercaseExpandedTerms: Boolean

    # Provide a more detailed explanation showing the actual Lucene query that will be executed.
    rewrite: Boolean

    # A comma-separated list of index names to restrict the operation; use `_all`
    # or empty string to perform the operation on all indices
    index: JSON

    # A comma-separated list of document types to restrict the operation; leave empty to perform the operation on all types
    type: JSON
  ): JSON
}

type Elastic50Methods_Ingest {
  # Perform a [ingest.deletePipeline](https://www.elastic.co/guide/en/elasticsearch/plugins/5.x/ingest.html) request
  deletePipeline(
    # Explicit operation timeout for connection to master node
    masterTimeout: String

    # Explicit operation timeout
    timeout: String

    # Pipeline ID
    id: String
  ): JSON

  # Perform a [ingest.getPipeline](https://www.elastic.co/guide/en/elasticsearch/plugins/5.x/ingest.html) request
  getPipeline(
    # Explicit operation timeout for connection to master node
    masterTimeout: String

    # Comma separated list of pipeline ids. Wildcards supported
    id: String
  ): JSON

  # Perform a [ingest.putPipeline](https://www.elastic.co/guide/en/elasticsearch/plugins/5.x/ingest.html) request
  putPipeline(
    # Explicit operation timeout for connection to master node
    masterTimeout: String

    # Explicit operation timeout
    timeout: String

    # Pipeline ID
    id: String
  ): JSON

  # Perform a [ingest.simulate](https://www.elastic.co/guide/en/elasticsearch/plugins/5.x/ingest.html) request
  simulate(
    # Verbose mode. Display data output for each processor in executed pipeline
    verbose: Boolean

    # Pipeline ID
    id: String
  ): JSON
}

type Elastic50Methods_Nodes {
  # Perform a [nodes.hotThreads](https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cluster-nodes-hot-threads.html) request
  hotThreads(
    # The interval for the second sampling of threads
    interval: String

    # Number of samples of thread stacktrace (default: 10)
    snapshots: Float

    # Specify the number of threads to provide information for (default: 3)
    threads: Float

    # Don't show threads that are in known-idle places, such as waiting on a
    # socket select or pulling from an empty task queue (default: true)
    ignoreIdleThreads: Boolean

    # The type to sample (default: cpu)
    type: Elastic50Enum_Type

    # Explicit operation timeout
    timeout: String

    # A comma-separated list of node IDs or names to limit the returned
    # information; use `_local` to return information from the node you're
    # connecting to, leave empty to get information from all nodes
    nodeId: JSON
  ): JSON

  # Perform a [nodes.info](https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cluster-nodes-info.html) request
  info(
    # Return settings in flat format (default: false)
    flatSettings: Boolean

    # Whether to return time and byte values in human-readable format.
    human: Boolean

    # Explicit operation timeout
    timeout: String

    # A comma-separated list of node IDs or names to limit the returned
    # information; use `_local` to return information from the node you're
    # connecting to, leave empty to get information from all nodes
    nodeId: JSON

    # A comma-separated list of metrics you wish returned. Leave empty to return all.
    metric: JSON
  ): JSON

  # Perform a [nodes.stats](https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cluster-nodes-stats.html) request
  stats(
    # A comma-separated list of fields for `fielddata` and `suggest` index metric (supports wildcards)
    completionFields: JSON

    # A comma-separated list of fields for `fielddata` index metric (supports wildcards)
    fielddataFields: JSON

    # A comma-separated list of fields for `fielddata` and `completion` index metric (supports wildcards)
    fields: JSON

    # A comma-separated list of search groups for `search` index metric
    groups: Boolean

    # Whether to return time and byte values in human-readable format.
    human: Boolean
    level: Elastic50Enum_Level_2 = node

    # A comma-separated list of document types for the `indexing` index metric
    types: JSON

    # Explicit operation timeout
    timeout: String

    # A comma-separated list of node IDs or names to limit the returned
    # information; use `_local` to return information from the node you're
    # connecting to, leave empty to get information from all nodes
    nodeId: JSON

    # Limit the information returned to the specified metrics
    metric: JSON

    # Limit the information returned for `indices` metric to the specific index
    # metrics. Isn't used if `indices` (or `all`) metric isn't specified.
    indexMetric: JSON
  ): JSON
}

type Elastic50Methods_Snapshot {
  # Perform a [snapshot.create](https://www.elastic.co/guide/en/elasticsearch/reference/5.x/modules-snapshots.html) request
  create(
    # Explicit operation timeout for connection to master node
    masterTimeout: String

    # Should this request wait until the operation has completed before returning
    waitForCompletion: Boolean

    # A repository name
    repository: String

    # A snapshot name
    snapshot: String
  ): JSON

  # Perform a [snapshot.createRepository](https://www.elastic.co/guide/en/elasticsearch/reference/5.x/modules-snapshots.html) request
  createRepository(
    # Explicit operation timeout for connection to master node
    masterTimeout: String

    # Explicit operation timeout
    timeout: String

    # Whether to verify the repository after creation
    verify: Boolean

    # A repository name
    repository: String
  ): JSON

  # Perform a [snapshot.deleteRepository](https://www.elastic.co/guide/en/elasticsearch/reference/5.x/modules-snapshots.html) request
  deleteRepository(
    # Explicit operation timeout for connection to master node
    masterTimeout: String

    # Explicit operation timeout
    timeout: String

    # A comma-separated list of repository names
    repository: JSON
  ): JSON

  # Perform a [snapshot.get](https://www.elastic.co/guide/en/elasticsearch/reference/5.x/modules-snapshots.html) request
  get(
    # Explicit operation timeout for connection to master node
    masterTimeout: String

    # Whether to ignore unavailable snapshots, defaults to false which means a SnapshotMissingException is thrown
    ignoreUnavailable: Boolean

    # A repository name
    repository: String

    # A comma-separated list of snapshot names
    snapshot: JSON
  ): JSON

  # Perform a [snapshot.getRepository](https://www.elastic.co/guide/en/elasticsearch/reference/5.x/modules-snapshots.html) request
  getRepository(
    # Explicit operation timeout for connection to master node
    masterTimeout: String

    # Return local information, do not retrieve the state from master node (default: false)
    local: Boolean

    # A comma-separated list of repository names
    repository: JSON
  ): JSON

  # Perform a [snapshot.restore](https://www.elastic.co/guide/en/elasticsearch/reference/5.x/modules-snapshots.html) request
  restore(
    # Explicit operation timeout for connection to master node
    masterTimeout: String

    # Should this request wait until the operation has completed before returning
    waitForCompletion: Boolean

    # A repository name
    repository: String

    # A snapshot name
    snapshot: String
  ): JSON

  # Perform a [snapshot.status](https://www.elastic.co/guide/en/elasticsearch/reference/5.x/modules-snapshots.html) request
  status(
    # Explicit operation timeout for connection to master node
    masterTimeout: String

    # Whether to ignore unavailable snapshots, defaults to false which means a SnapshotMissingException is thrown
    ignoreUnavailable: Boolean

    # A repository name
    repository: String

    # A comma-separated list of snapshot names
    snapshot: JSON
  ): JSON

  # Perform a [snapshot.verifyRepository](https://www.elastic.co/guide/en/elasticsearch/reference/5.x/modules-snapshots.html) request
  verifyRepository(
    # Explicit operation timeout for connection to master node
    masterTimeout: String

    # Explicit operation timeout
    timeout: String

    # A repository name
    repository: String
  ): JSON
}

type Elastic50Methods_Tasks {
  # Perform a [tasks.cancel](https://www.elastic.co/guide/en/elasticsearch/reference/5.x/tasks.html) request
  cancel(
    # A comma-separated list of node IDs or names to limit the returned
    # information; use `_local` to return information from the node you're
    # connecting to, leave empty to get information from all nodes
    nodeId: JSON

    # A comma-separated list of actions that should be cancelled. Leave empty to cancel all.
    actions: JSON

    # Cancel tasks with specified parent node.
    parentNode: String

    # Cancel tasks with specified parent task id (node_id:task_number). Set to -1 to cancel all.
    parentTask: String

    # Cancel the task with specified task id (node_id:task_number)
    taskId: String
  ): JSON

  # Perform a [tasks.get](https://www.elastic.co/guide/en/elasticsearch/reference/5.x/tasks.html) request
  get(
    # Wait for the matching tasks to complete (default: false)
    waitForCompletion: Boolean

    # Return the task with specified id (node_id:task_number)
    taskId: String
  ): JSON

  # Perform a [tasks.list](https://www.elastic.co/guide/en/elasticsearch/reference/5.x/tasks.html) request
  list(
    # A comma-separated list of node IDs or names to limit the returned
    # information; use `_local` to return information from the node you're
    # connecting to, leave empty to get information from all nodes
    nodeId: JSON

    # A comma-separated list of actions that should be returned. Leave empty to return all.
    actions: JSON

    # Return detailed task information (default: false)
    detailed: Boolean

    # Return tasks with specified parent node.
    parentNode: String

    # Return tasks with specified parent task id (node_id:task_number). Set to -1 to return all.
    parentTask: String

    # Wait for the matching tasks to complete (default: false)
    waitForCompletion: Boolean
    groupBy: Elastic50Enum_GroupBy = nodes
  ): JSON
}

# The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
scalar JSON

type Query {
  # Elastic v5.0
  elastic50(host: String = "http://user:pass@example.com:9200"): Elastic50
}
